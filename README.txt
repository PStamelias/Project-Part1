ΦΟΙΤΗΤΗΣ 1:
Ονοματεπώνυμο:Προκόπιος Σταμελιάς
Αριθμός Μητρώου:1115201400190
ΦΟΙΤΗΤΗΣ 2:
Ονοματεπώνυμο:Άννα Λογοθέτη
Αριθμός Μητρώου:1115201600095

Οδηγίες μεταγλώττισης:
Εντολή make 

Οδηγίες Εκτέλεσης:
Όπως παρουσίαζεται στην εκφώνηση
(Για την συσταδοποίηση η παράμετρος της γραμμής εντολών -complete δεν παίρνει κάποια τιμή,δηλαδή είτε μπαίνει είτε όχι!Για το cluster.conf πρέπει να υπάρχει τουλάχιστον ένα κενό ανάμεσα στο string πχ "number_of_clusters:" και στον ακέραιο που ακολουθεί)

Τίτλος και Περιγραφή του Προγράμματος:
Ένα κομμάτι του  προγράμματος(./lsh , ./cube) ασχολέιται με την εύρεση προσεγγιστικά πλησιέστερων γειτόνων και εξακριβωμένων πλησιέστερων γειτόνων  από ένα σημείο(εικόνα) ενός dataset με χρήση αλγορίθμων LSH,Ηypercube  και εξαντλητικής αναζήτησης αντίστοιχα.Και ένα κομμάτι του προγράμματος (./cluster) ασχολείται με την έυρεση κεντροειδών και την ανάθεση εικόνων ενός  dataset στα κατάλληλα κεντροειδή(συσταδοποίηση).

Κατάλογος αρχείων και περιγραφή τους:
Για LSH:
	fun1.c:
		Περιέχει την image_creation η οποία διαβάζει τα περιέχομενα του input_file και δημιουργεί έναν πίνακα με τις εικόνες του input_file,create_s_numbers_ofLtables επιστρέφει έναν τρισδιάστατο πίνακα με τις s τιμές  των h συναρτήσεων που περιλαμβάνει κάθε συνάρτηση g, την manhattan_dist που υπολογίζει την απόσταση manhattan μεταξύ δύο εικόνων,την  compute_h που υπολογίζει την τιμή που επιστρέφει μία συνάρτηση h, την compute_g που υπολογίζει την τιμή που επιστρέφει μία συνάρτηση g,την Hash_Table_Creation που δημιουργέι τους L πίνακες κατακερματισμού και τους αναθέτει τις εικόνες του input_file,την approximateNN που υπολογίζει τους προσεγγιστικά N πλησιέστερους γείτονες μίας εικόνας,την exact_NN που υπολογίζει τους ακριβείς N πλησιέστερους γείτονες μίας εικόνας και  την range_search που βρίσκει τους γείτονες μίας εικόνας  εντός ακτίνας  R.  
	struct1.h:
		Τα πρωτότυπα των συναρτήσεων και κάποιες δομές που χρειάζονται!Στη δομή image_node αποθηκεύουμε  το image_number και τα pixels μιας εικόνας και η δομή bucket περιλαμβάνει δείκτη σε image_node,τη τιμή g της εικόνας που δείχνει το bucket και αυτή η δομή χρησιμέυει στους L πίνακες κατακερματισμού.
	main1.c:
		Υλοποιείται ο LSH για ένα query file και υπάρχει η δυνατότητα να δώσουμε και άλλο query_file δίνοντας όμως και διαφορετικό output_file.Η διαδικασία για ένα query_file ολοκληρώνεται όταν εκτυπωθεί Type the name of new query file and new output file or type NO if you want to terminate the program 
Για CUBE:
	fun2.c:
		Περιέχει την create_f_trees η οποία δημιουργεί k binary_search trees  στους κόμβους των οποίων 
		αντιστοιχείται μία ακέραια τιμή με 0 ή 1, την string01_of_image η οποία παίρνει μία εικόνα και επιστρέφει ένα δεκαδικό ο οποίος είναι η σειρά από 0 και 1 που δίνουν οι f_συναρτήσεις της θεωρίας, την bucket_hypercube_creation που δημιουργεί έναν υπερκύβο δηλαδή ένα πίνακα κατακερματισμού και του αναθέτει όλες τις εικόνες του input_file, την approximeteNN_hypercube
		που επιστρέφει τους N προσεγγιστικά πλησιέστερους γείτονες μίας εικόνας , την range_search_cube 
		που επιστρέφει τους γείτονες μίας εικόνας εντός ακτίνας R 
	struct2.h:
		Έχει τα πρωτότυπα των συναρτήσεων και κάποιες δομές που χρειάζονται.Έχει τη δομή hypercube(κάθε θέση του υπερκύβου δείχνει σε μία λίστα από hypercube) και την δομή tree_node που χρησιμοποιείται στα binary_search_trees και κάθε κόμβος tree_node αντιστοιχεί μία ακέραια τιμή σε 0 ή 1.
	main2.c:
		Υλοπόιείται ο αλγόριθμος του Hypercube  και υπάρχει η δυνατότητα να δώσουμε και άλλο query_file δίνοντας όμως και διαφορετικό output_file.Η διαδικασία για ένα query_file ολοκληρώνεται όταν εκτυπωθεί Type the name of new query file and new output file or type NO if you want to terminate the program 		
Για CLUSTER: 
	fun3.c:
		Περιέχει την initialization_kmeans  που βρίσκει τα k πρώτα κεντροειδή με τρόπο τέτοιο ώστε να είναι όσο το δυνατόν μακριά το ένα από το άλλο, την Lloyds η οπο´ια βρίσκει για κάθε εικόνα του dataset το ακριβές πλησιέστερο κεντροειδές , την update η οπόία ενημερώνει τα κεντροειδή χρησιμοποιώντας τη διάμεσο σύμφωνα με τον αλγόριθμο , την silhouette που υπολογίζει τη σιλουέττα μίας εικόνας((b(i)-a(i))/max(a(i),b(i))).
	struct3.h:
		Εμπεριέχει τα πρωτότυπα των συναρτήσεων που χρειάζονται και την δομή Pnode η οποία χρησιμέυει στο kmeans++. 
	main3.c:
		Για ένα input_file εκτελέι τον αλγόριθμο της συσταδοποίησης είτε με Lloyds(Classic) είτε με LSH  είτε με Hypercube και στο τέλος εκτυπώνει τα κεντροειδή και τις εικόνες του input_file που ανατέθηκαν σε κάθε κεντροειδές και εκτυπώνει και τη silhouette κάθε cluster και το μέσο όρο των  silhouette  όλων των clusters. 